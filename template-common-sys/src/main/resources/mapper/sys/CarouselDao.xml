<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vigekoo.dao.CarouselDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.vigekoo.entity.Carousel" id="carouselMap">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="image" column="image"/>
        <result property="pcImage" column="pc_image"/>
        <result property="type" column="type"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.vigekoo.entity.Carousel">
		select * from carousel where id = #{value}
	</select>

	<select id="queryList" resultType="com.vigekoo.entity.Carousel">
		select * from carousel
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from carousel 
	</select>
	 
	<insert id="save" parameterType="com.vigekoo.entity.Carousel" useGeneratedKeys="true" keyProperty="id">
		insert into carousel
		(
			`title`, 
			`image`, 
			`pc_image`, 
			`type`, 
			`content`, 
			`create_time`, 
			`update_time`
		)
		values
		(
			#{title}, 
			#{image}, 
			#{pcImage}, 
			#{type}, 
			#{content}, 
			#{createTime}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.vigekoo.entity.Carousel">
		update carousel 
		<set>
			<if test="title != null">`title` = #{title}, </if>
			<if test="image != null">`image` = #{image}, </if>
			<if test="pcImage != null">`pc_image` = #{pcImage}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from carousel where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from carousel where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>